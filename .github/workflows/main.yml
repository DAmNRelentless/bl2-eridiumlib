name: CI

on: [push, pull_request]

env:
  MOD_NAME: EridiumLib
  RELEASE_FILES: "*.py LICENSE licenses dist"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x86'

    - name: Clone PythonSDK Mods
      run: |
        git clone --depth 1 --filter=blob:none --sparse https://github.com/bl-sdk/PythonSDK
        cd PythonSDK
        git sparse-checkout init --cone
        git sparse-checkout set Mods

    - name: Clone ${{ env.MOD_NAME }}
      uses: actions/checkout@v2     
      with:
        path: PythonSDK/Mods/${{ env.MOD_NAME }}

    - name: Install dependencies
      working-directory: PythonSDK
      run: |
        python -m pip install --upgrade pip
        pip install -r Mods/${{ env.MOD_NAME }}/requirements-linters.txt
    
    - name: Move config files to our new "project dir"
      working-directory: PythonSDK
      run: mv Mods/$MOD_NAME/{pyproject.toml,setup.cfg} .

    - name: Lint with isort
      working-directory: PythonSDK
      run: python -m isort Mods/$MOD_NAME --check-only --diff
    - name: Lint with black
      working-directory: PythonSDK
      run: python -m black Mods/$MOD_NAME --check
    - name: Lint with flake8
      working-directory: PythonSDK
      run: python -m flake8 Mods/$MOD_NAME -v --show-source --statistics
    - name: Lint with mypy
      working-directory: PythonSDK
      run: python -m mypy Mods/$MOD_NAME --pretty

  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Package as tar
      run: tar -czvf ${{ github.event.repository.name }}.tar.gz $RELEASE_FILES
    - name: Package as zip
      run: zip -r ${{ github.event.repository.name }}.zip $RELEASE_FILES

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
          files: |
            ${{ github.event.repository.name }}.tar.gz
            ${{ github.event.repository.name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



